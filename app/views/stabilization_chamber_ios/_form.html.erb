<script type="text/javascript">

function add_pallets()
{
  var p_temperature = $("#stabilization_chamber_io_temperature").val();
  var p_worker_id = $("#stabilization_chamber_io_worker_id").val();
  
  if (validarCampos(p_temperature, p_worker_id))
  {
    $('#chamber_table tbody tr').each(function(index){
       var code = $(this).find("td").eq(0).text();
       $.get("/packing_pallets.json", function(pallets) {
         $.each(pallets, function(index, pallet){
          if (pallet.pallet_code == code) {
            var p_packing_pallet_id = pallet.id;
            $.ajax({
                url: "/stabilization_chamber_ios/",
                type: "POST",
                  data: {transit_chamber_io:{ temperature: p_temperature,
                                              worker_id: p_worker_id,
                                              packing_pallet_id: p_packing_pallet_id}
                        }                      
              }).done(function(){
                window.location = "/stabilization_chamber_ios"
              });
          }
         });
       });
    });
  }
  
}

function validarCampos(temperatura,trabajador)
{

  var items_filled = ((temperatura != '') && (trabajador != ''));
  var temperature_decimal = check_decimal(temperatura) || validate_integer(temperature_decimal) ;
  if(!items_filled || !temperature_decimal)
  {
        var errors = "No se puede agregar el registro: \n";
        if(temperatura == '')
        {
          errors = errors + '  - Temperatura no puede estar vacio';
        }
        if(!temperature_decimal)
        {
          errors = errors + '  - Temperatura debe ser numerico';
        }
        if(trabajador == '')
        {
          errors = errors + '\n  - Encargado no puede estar vacio';
        }

        alert(errors);
  }
  return items_filled;

}

function validate_integer(strValue)
  {
      var objRegExp  = /(^-?\d\d*$)/;  
      var result = objRegExp.test(strValue);
      if(result)
      {
        return true;
      }
      return false;

  }

function check_decimal(inputtxt)   
{   
    var decimal=  /^[-+]?[0-9]+\.[0-9]+$/; 
    if(inputtxt.match(decimal) || validate_integer(inputtxt))   
    {   
      return true;  
    }  
    else  
    {   
      return false;  
    }  
  } 

function delete_row(button)
{
  var currentRow = $(button).closest('tr');
  $("#chamber_table").dataTable().fnDeleteRow(currentRow[0]);
  var nodes = $('#chamber_table').dataTable().fnGetNodes();
  if (nodes.length == 0)
  {
    $('#stabilization_chamber_io_direction_true').removeAttr('disabled');
    $('#stabilization_chamber_io_direction_false').removeAttr('disabled');
  }
}

$(document).ready(function(){
  $('input[name="stabilization_chamber_io[direction]"]').on("click", function(){
    $('#type_error_label').text("");
  });

  $('#code_pallet').keydown(function (e){
      if(e.keyCode == 13){
          add_pallet();
      }
  });

  $('#add_pallet').on("click", function (e){
          add_pallet();
  });
  
  // $('#code_pallet').on("focus",function(){
  //   var direction = $('input[name="transit_chamber_io[direction]"]:checked').val();
  //   if (direction == null){
  //     $('#code_pallet').blur();
  //     $('#type_error_label').text("Debe seleccionar un tipo de registro.");
  //   }
  // });

  function already_added () {
    var nodes = $('#chamber_table').dataTable().fnGetNodes();
    if (nodes.length == 0)
    {
      $('#stabilization_chamber_io_direction_true').attr('disabled', 'disabled');
      $('#stabilization_chamber_io_direction_false').attr('disabled', 'disabled');
      return false;
    }
    
    for (var i = 0; i < nodes.length; i++) {
      var row = $('#chamber_table').dataTable().fnGetData(i);
      var code = row[0];
      if (code == $("#code_pallet").val()){
        return true;
      }
    };
    return false;
  }

  function add_pallet(){
    var route;
    //if($('input[name="transit_chamber_io[direction]"]:checked').val() == "true"){
    route = "/stabilization_chamber_io_valid_pallets";
    // }
    // else{  
    //   route = "/transit_chamber_io_pallets_already_added";
    // }


    $("#error_label").text("");
    $.get(route, function(pallets){
      flag = false;
      $.each(pallets, function(index, pallet){
        if (pallet.pallet_code == $("#code_pallet").val() && !already_added()) {
          flag = true;
          $('#chamber_table').dataTable().fnAddData([
             pallet.pallet_code,
             pallet.pack_type_id,
             pallet.gross_weight,
             "<a onclick='delete_row(this);'>Eliminar</a>"
          ]);   
        }
      });
      if (!flag){
        $("#error_label").text("Ingrese un c칩digo v치lido");
      }
       
      $("#code_pallet").val("");
    });
  }
});


</script>


<div class="box">

<%= form_for(@stabilization_chamber_io) do |f| %>
  <% if @stabilization_chamber_io.errors.any? %>
    <div id="error_explanation">
      <h2><%= @stabilization_chamber_io.errors.count > 1 ? "#{@stabilization_chamber_io.errors.count} errores." : "#{@stabilization_chamber_io.errors.count} error." %> no se puede guardar la c치mara de estabilizacion:</h2>
      <ul>
      <% @stabilization_chamber_io.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="line-forme">
    <div class="forme-lab">
      <label> 
        Temperatura
        <em class="formee-req">*</em>
      </label>  
    </div>
    <div class="forme-in">
      <%= f.text_field :temperature %>
    </div>
  </div>

  <div class="line-forme">
    <div class="forme-lab">
      <label> 
        Encargado
        <em class="formee-req">*</em>
      </label>  
    </div>
    <div class="forme-in">
      <% @workers = Worker.all.map { |worker| [worker.first_name.to_s + " " + worker.last_name.to_s, worker.id] } %>
      <% if @stabilization_chamber_io.worker_id.nil? %>
        <%= f.select(:worker_id, @workers, :selected => :prompt, :prompt => '- Seleccione trabajador -') %>  
      <% else %>
        <%= f.select(:worker_id, @workers) %>  
      <% end %>
    </div>
  </div>

  <!-- <div class="line-forme">
    <div class="forme-lab">
      <label> 
        Tipo
        <em class="formee-req">*</em>
      </label>  
    </div>
    <div class="forme-in">
      <%= f.radio_button(:direction, true) %>
        <%= label_tag(:label1, "Entrada") %>
        <%= f.radio_button(:direction,false) %>
        <%= label_tag(:label1, "Salida") %>
        <label id="type_error_label", class="alignright", style="color: red;"></label>
    </div>
  </div> -->

  <div class="forme-in">
    <label> (
    <em class="formee-req">*</em>
    ) Campos obligatorios.
    </label>         
  </div>

  <br>
  <br>

<% end %>

<div class="headContent">
    <h1>Agregar Pallet</h1>
  </div>
  <div class="box">

    <div class="line-forme">
      <div class="forme-lab">
        <label> 
          Pallet
        </label>  
      </div>
      <div class="forme-in">
        <%= text_field(:code, :pallet)%> 
      </div>
      <div class="forme-in">
        <label id="error_label", style="color: red;"></label>
      </div>
      <%= button_tag "Agregar Pallet" , :class => "button blue alignright", :id => "add_pallet"%>
    </div>

    <table cellpadding="0" cellspacing="0" border="0" class="display datatable" id="chamber_table">
      <thead>
        <tr>    
          <th>C칩digo de Pallet</th>
          <th>Tipo de Pack</th>
          <th>Peso Bruto</th>  
          <th>Acciones</th>
        </tr>
      </thead>

      <tbody>
      </tbody>
    </table>

  </div>
</div>
<div class="foot-box">
    <%= link_to 'Cancelar', stabilization_chamber_ios_path , :class => "button silver alignright" %>
    <%= button_tag "Agregar" , :class => "button green alignright", :onclick => "add_pallets();"%>
</div>
